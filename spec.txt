ZGivenSetDecl ("UNIVERSE",[])
ZFreeTypeDef ("NAME",[]) [ZBranch0 ("SysClock_time",[])]
ZAbbreviation ("BINDINGS",[]) (ZCall (ZVar ("\\fun",[])) (ZTuple [ZVar ("NAME",[]),ZVar ("UNIVERSE",[])]))
ZAbbreviation ("\\delta",[]) (ZSetDisplay [ZCall (ZVar ("\\mapsto",[])) (ZTuple [ZVar ("SysClock_time",[]),ZVar ("\\nat",[])])])
CircChannel [CChanDecl "mget" (ZCross [ZVar ("NAME",[]),ZVar ("UNIVERSE",[])]),CChanDecl "mset" (ZCross [ZVar ("NAME",[]),ZVar ("UNIVERSE",[])])]
CircChannel [CChan "terminate"]
CircChanSet "MEMi" (CChanSet ["mset","mget","terminate"])
Process (CProcess "SysClock" (ProcDef (ProcStalessMain [CParAction "Memory" (CircusAction (CActionCommand (CVResDecl [Choose ("b",[]) (ZVar ("BINDING",[]))] (CSPExtChoice (CSPExtChoice (CSPRepExtChoice [Choose ("n",[]) (ZCall (ZVar ("\\dom",[])) (ZVar ("b",[])))] (CSPCommAction (ChanComm "mget" [ChanDotExp (ZVar ("n",[])),ChanOutExp (ZCall (ZVar ("b",[])) (ZVar ("n",[])))]) (CSPParAction "Memory" [ZVar ("b",[])]))) (CSPRepExtChoice [Choose ("n",[]) (ZCall (ZVar ("\\dom",[])) (ZVar ("b",[])))] (CSPCommAction (ChanComm "mset" [ChanDotExp (ZVar ("n",[])),ChanInpPred "nv" (ZMember (ZVar ("nv",[])) (ZCall (ZVar ("\\delta",[])) (ZVar ("n",[]))))]) (CSPParAction "Memory" [ZCall (ZVar ("\\oplus",[])) (ZTuple [ZVar ("b",[]),ZSetDisplay [ZCall (ZVar ("\\mapsto",[])) (ZTuple [ZVar ("n",[]),ZVar ("nv",[])])]])])))) (CSPCommAction (ChanComm "terminate" []) CSPSkip)))))] (CActionCommand (CValDecl [Choose ("b",[]) (ZSetComp [Choose ("x",[]) (ZVar ("BINDING",[])),Check (ZMember (ZVar ("time",[])) (ZVar ("\\nat",[])))] Nothing)] (CSPSeq (CSPCommAction (ChanComm "mget" [ChanDotExp (ZVar ("SysClock_time",[])),ChanInp "vSysClock_time"]) (CSPCommAction (ChanComm "mset" [ChanDotExp (ZVar ("SysClock_time",[])),ChanOutExp (ZInt 0)]) CSPSkip)) (CSPRecursion "X" (CSPSeq (CSPInterleave (CSPCommAction (ChanComm "tick" []) (CActionCommand (CAssign [("time",[])] [ZCall (ZVar ("+",[])) (ZTuple [ZVar ("SysClock_time",[]),ZInt 1])]))) (CSPCommAction (ChanComm "getCurrentTime" [ChanOutExp (ZVar ("SysClock_time",[]))]) CSPSkip)) (CActionName "X")))))))))
CircChannel [CChan "tick"]
CircChannel [CChanDecl "getCurrentTime" (ZVar ("\\nat",[]))]
