-- This file is automatically generated by the Circus2ZCSP Translator V0.5
-- on Wed Jul 20 11:14:53 BST 2016
-- See https://github.com/RandallYe/Circus2ZCSP for more information.

-- Minimum and maximum integers for model checking. Make sure they are set in advance.
MININT = 0
MAXINT = 3

-- Maximum instances generated for iseq.  Make sure it is set in advance.
MAXINS = 5

-- include a set of libraries
include "lib_basic.csp"
include "lib_num.csp"
include "lib_card.csp"
include "lib_log.csp"
include "lib_set.csp"
include "lib_rel.csp"
include "lib_fun.csp"
include "lib_seq.csp"


-- Axiomatic definition (Constant)
-- They should be assigned manually to meet its type and predicate restriction
-- and match the values assigned in Z as well
-- The variables defined below should meet the predicate below
--       maxbuff == 5
maxbuff = 5

-- type



-- channel declarations
channel div
channel input,output : Nat
channel Buffer_BufferInit-- 
channel Buffer_BufferInit_fOp -- 
channel Buffer_InputCmd: Nat-- !x
channel Buffer_InputCmd_fOp: Nat -- !x
channel Buffer_OutputCmd-- 
channel Buffer_OutputCmd_fOp -- 
channel Buffer_OP_size : {0 .. maxbuff}
channel Buffer_OP_buff : fseq(Nat)


-- hidden event
HIDE_CSPB = {|Buffer_OP_size, Buffer_OP_buff, Buffer_BufferInit, Buffer_BufferInit_fOp, Buffer_InputCmd, Buffer_InputCmd_fOp, Buffer_OutputCmd, Buffer_OutputCmd_fOp|}

-- processes for variable storing and retrieving 

-- processes 
-- Divergent Process 
DIV = div -> STOP


Buffer = 
   (
  (   Buffer_BufferInit ->  SKIP
   [] Buffer_BufferInit_fOp -> DIV
  ) ; 
  let X = 
     (Buffer_OP_buff?buff -> Buffer_OP_size?size -> 
    (   ((size < maxbuff) & input?x -> 
      (   Buffer_InputCmd!x ->  SKIP
       [] Buffer_InputCmd_fOp!x -> DIV
      ))
     [] ((size > 0) & output.(head(buff)) -> 
      (   Buffer_OutputCmd ->  SKIP
       [] Buffer_OutputCmd_fOp -> DIV
      ))
    ) ; X) 
  within X) 

MAIN = Buffer


-- assertions 
assert MAIN :[ livelock free ]
assert MAIN :[ deadlock free [F] ]
assert MAIN :[ deadlock free [FD] ]

