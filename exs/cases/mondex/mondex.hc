ZAbbreviation ("INDEX",[],"") (ZVar ("\\nat",[],""))
ZAbbreviation ("MONEY",[],"") (ZSetDisplay [ZCall (ZVar ("\\upto",[],"")) (ZTuple [ZInt 0,ZInt 5])])
CircChannel [CChanDecl "pay" (ZCross [ZVar ("INDEX",[],""),ZVar ("INDEX",[],""),ZVar ("MONEY",[],"")])]
CircChannel [CChanDecl "transfer" (ZCross [ZVar ("INDEX",[],""),ZVar ("INDEX",[],""),ZVar ("MONEY",[],"")])]
CircChannel [CChanDecl "accept" (ZVar ("INDEX",[],""))]
CircChannel [CChanDecl "reject" (ZVar ("INDEX",[],""))]
ZFreeTypeDef ("UNIVERSE",[],"") [ZBranch1 ("IND",[],"") (ZVar ("INDEX",[],""))]
ZFreeTypeDef ("U_IND",[],"") [ZBranch1 ("IND",[],"") (ZVar ("INDEX",[],""))]
ZFreeTypeDef ("NAME",[],"") [ZBranch0 ("sv_value",[],"IND")]
ZFreeTypeDef ("NAME_IND",[],"") [ZBranch0 ("sv_value",[],"IND")]
ZAbbreviation ("BINDINGS_IND",[],"") (ZCall (ZVar ("\\fun",[],"")) (ZTuple [ZVar ("NAME_IND",[],""),ZVar ("U_IND",[],"")]))
ZAbbreviation ("BINDINGS",[],"") (ZCall (ZVar ("\\cup",[],"")) (ZTuple [ZVar ("BINDINGS_IND",[],"")]))
ZAbbreviation ("\\delta_IND",[],"") (ZSetDisplay [ZCall (ZVar ("\\mapsto",[],"")) (ZTuple [ZVar ("sv_value",[],"IND"),ZVar ("INDEX",[],"")])])
CircChannel [CChanDecl "mget" (ZCross [ZVar ("NAME",[],""),ZVar ("UNIVERSE",[],"")]),CChanDecl "mset" (ZCross [ZVar ("NAME",[],""),ZVar ("UNIVERSE",[],"")])]
CircChannel [CChan "terminate"]
CircChanSet "MEMI" (CChanSet ["mset","mget","terminate"])
CircChannel [CChanDecl "lget" (ZCross [ZVar ("NAME",[],""),ZVar ("UNIVERSE",[],"")]),CChanDecl "lset" (ZCross [ZVar ("NAME",[],""),ZVar ("UNIVERSE",[],"")])]
CircChannel [CChan "lterminate"]
CircChanSet "MEML" (CChanSet ["lset","lget","lterminate"])
Process (CProcess "Card" (ProcDefSpot [Choose ("b_IND",[],"") (ZVar ("BINDING_IND",[],"")),Choose ("i",[],"") (ZVar ("INDEX",[],""))] (ProcDef (ProcStalessMain [CParAction "Memory" (CircusAction (CActionCommand (CVResDecl [Choose ("b_IND",[],"") (ZVar ("BINDING_IND",[],""))] (CSPExtChoice (CSPExtChoice (CSPRepExtChoice [Choose ("n",[],"IND") (ZCall (ZVar ("\\dom",[],"")) (ZVar ("b_IND",[],"")))] (CSPCommAction (ChanComm "mget" [ChanDotExp (ZVar ("n",[],"IND")),ChanOutExp (ZCall (ZVar ("b_IND",[],"")) (ZVar ("n",[],"IND")))]) (CSPParAction "Memory" [ZVar ("b_IND",[],"")]))) (CSPRepExtChoice [Choose ("n",[],"IND") (ZCall (ZVar ("\\dom",[],"")) (ZVar ("b_IND",[],"")))] (CSPCommAction (ChanComm "mset" [ChanDotExp (ZVar ("n",[],"b_IND")),ChanInpPred "nv" (ZMember (ZVar ("nv",[],"IND")) (ZCall (ZVar ("\\delta",[],"")) (ZVar ("n",[],"IND"))))]) (CSPParAction "Memory" [ZCall (ZVar ("\\oplus",[],"")) (ZTuple [ZVar ("b_IND",[],""),ZSetDisplay [ZCall (ZVar ("\\mapsto",[],"")) (ZTuple [ZVar ("n",[],""),ZVar ("nv",[],"")])]])])))) (CSPCommAction (ChanComm "terminate" []) CSPSkip))))),CParAction "MemoryMerge" (CircusAction (CActionCommand (CVResDecl [Choose ("b_IND",[],"") (ZVar ("BINDING_IND",[],"")),Choose ("ns",[],"") (ZCall (ZVar ("\\seq",[],"")) (ZVar ("NAME",[],"")))] (CSPExtChoice (CSPExtChoice (CSPRepExtChoice [Choose ("n",[],"IND") (ZCall (ZVar ("\\dom",[],"")) (ZVar ("b_IND",[],"")))] (CSPCommAction (ChanComm "lget" [ChanDotExp (ZVar ("n",[],"IND")),ChanOutExp (ZCall (ZVar ("b_IND",[],"")) (ZVar ("n",[],"IND")))]) (CSPParAction "MemoryMerge" [ZVar ("b_IND",[],""),ZVar ("ns",[],"")]))) (CSPRepExtChoice [Choose ("n",[],"IND") (ZCall (ZVar ("\\dom",[],"")) (ZVar ("b_IND",[],"")))] (CSPCommAction (ChanComm "lset" [ChanDotExp (ZVar ("n",[],"IND")),ChanInpPred "nv" (ZMember (ZVar ("nv",[],"IND")) (ZCall (ZVar ("\\delta",[],"")) (ZVar ("n",[],"IND"))))]) (CSPParAction "MemoryMerge" [ZCall (ZVar ("\\oplus",[],"")) (ZTuple [ZVar ("b_IND",[],""),ZSetDisplay [ZCall (ZVar ("\\mapsto",[],"")) (ZTuple [ZVar ("n",[],""),ZVar ("nv",[],"")])]]),ZVar ("ns",[],"")])))) (CSPCommAction (ChanComm "lterminate" []) (CSPRepSeq [Choose ("bd",[],"") (ZSeqDisplay [ZVar ("b_IND",[],"")]),Choose ("n",[],"") (ZSeqDisplay [ZVar ("ns",[],"")])] (CSPCommAction (ChanComm "mset" [ChanDotExp (ZVar ("n",[],"")),ChanOutExp (ZCall (ZVar ("bd",[],"")) (ZVar ("n",[],"")))]) CSPSkip)))))))] (CSPHide (CSPNSParal [] (CSExpr "MEMI") [ZVar ("b_IND",[],"")] (CSPSeq (CSPCommAction (ChanComm "mset" [ChanDotExp (ZVar ("sv_value",[],"IND")),ChanDotExp (ZInt 0)]) (CSPRecursion "muCycle" (CSPCommAction (ChanComm "mget" [ChanDotExp (ZVar ("sv_value",[],"IND")),ChanInp "v_sv_value"]) (CSPSeq (CSPExtChoice (CSPCommAction (ChanComm "pay" [ChanDotExp (ZVar ("i",[],"")),ChanInp "j",ChanInp "n"]) (CSPExtChoice (CSPGuard (ZMember (ZTuple [ZVar ("n",[],""),ZVar ("v_sv_value",[],"IND")]) (ZVar (">",[],""))) (CSPCommAction (ChanComm "reject" [ChanDotExp (ZVar ("i",[],""))]) CSPSkip)) (CSPGuard (ZMember (ZTuple [ZVar ("n",[],""),ZVar ("v_sv_value",[],"IND")]) (ZVar ("\\leq",[],""))) (CSPCommAction (ChanComm "transfer" [ChanDotExp (ZVar ("i",[],"")),ChanDotExp (ZVar ("j",[],"")),ChanOutExp (ZVar ("n",[],""))]) (CSPCommAction (ChanComm "accept" [ChanDotExp (ZVar ("i",[],""))]) (CSPGuard (ZMember (ZTuple [ZVar ("n",[],""),ZVar ("v_sv_value",[],"IND")]) (ZVar ("\\leq",[],""))) (CSPCommAction (ChanComm "mset" [ChanDotExp (ZVar ("sv_value",[],"IND")),ChanDotExp (ZCall (ZVar ("-",[],"")) (ZTuple [ZVar ("sv_value",[],"IND"),ZVar ("n",[],"")]))]) CSPSkip))))))) (CSPCommAction (ChanComm "transfer" [ChanInp "j",ChanDotExp (ZVar ("i",[],"")),ChanInp "n"]) (CSPCommAction (ChanComm "mset" [ChanDotExp (ZVar ("sv_value",[],"IND")),ChanDotExp (ZCall (ZVar ("+",[],"")) (ZTuple [ZVar ("sv_value",[],"IND"),ZVar ("n",[],"")]))]) CSPSkip))) (CActionName "muCycle"))))) (CSPCommAction (ChanComm "terminate" []) CSPSkip)) (CSPParAction "Memory" [ZVar ("b_IND",[],"")])) (CSExpr "MEMI"))))))
