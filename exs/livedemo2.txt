##### Spec in Latex (exs/live3.tex)

\begin{circus}%
TYPE ::= blue | black | yellow | green\\
TYPES == \{~blue,black,yellow,green~\}\\
\circchannel x1,x2 : TYPES\\
 \circprocess\ ~SimpleExample ~\circdef~\circbegin
  A1 \circdef x1?y \then \Skip
  A2 \circdef \Extchoice x:\{black,yellow,green\} \circspot x2?x \then \Skip
  \circspot  A1 \intchoice A2
  \circend
\end{circus}

##### Is read in JAZA as
ZFreeTypeDef ("TYPE",[]) [ZBranch0 ("blue",[]),ZBranch0 ("black",[]),ZBranch0 ("yellow",[]),ZBranch0 ("green",[])]
ZAbbreviation ("TYPES",[]) (ZSetDisplay [ZVar ("blue",[]),ZVar ("black",[]),ZVar ("yellow",[]),ZVar ("green",[])])
CircChannel [CChanDecl "x1" (ZVar ("TYPES",[])),CChanDecl "x2" (ZVar ("TYPES",[]))]
Process (CProcess "SimpleExample" 
	(ProcDef (ProcStalessMain 
		[CParAction "A1" (CircusAction (CSPCommAction (ChanComm "x1" [ChanInp "y"]) CSPSkip)),
		 CParAction "A2" (CircusAction (CSPRepExtChoice [Choose ("x",[]) (ZSetDisplay [ZVar ("black",[]),ZVar ("yellow",[]),ZVar ("green",[])])] (CSPCommAction (ChanComm "x2" [ChanInp "x"]) CSPSkip)))] 
		(CSPIntChoice (CActionName "A1") (CActionName "A2")))))



##### To execute in GHCi

mapping_Circus [ZFreeTypeDef ("TYPE",[]) [ZBranch0 ("blue",[]),ZBranch0 ("black",[]),ZBranch0 ("yellow",[]),ZBranch0 ("green",[])], ZAbbreviation ("TYPES",[]) (ZSetDisplay [ZVar ("blue",[]),ZVar ("black",[]),ZVar ("yellow",[]),ZVar ("green",[])]), CircChannel [CChanDecl "x1" (ZVar ("TYPES",[])),CChanDecl "x2" (ZVar ("TYPES",[]))], Process (CProcess "SimpleExample" (ProcDef (ProcStalessMain [CParAction "A1" (CircusAction (CSPCommAction (ChanComm "x1" [ChanInp "y"]) CSPSkip)),CParAction "A2" (CircusAction (CSPRepExtChoice [Choose ("x",[]) (ZSetDisplay [ZVar ("black",[]),ZVar ("yellow",[]),ZVar ("green",[])])] (CSPCommAction (ChanComm "x2" [ChanInp "x"]) CSPSkip)))] (CSPIntChoice (CActionName "A1") (CActionName "A2")))))] [ZFreeTypeDef ("TYPE",[]) [ZBranch0 ("blue",[]),ZBranch0 ("black",[]),ZBranch0 ("yellow",[]),ZBranch0 ("green",[])], ZAbbreviation ("TYPES",[]) (ZSetDisplay [ZVar ("blue",[]),ZVar ("black",[]),ZVar ("yellow",[]),ZVar ("green",[])]), CircChannel [CChanDecl "x1" (ZVar ("TYPES",[])),CChanDecl "x2" (ZVar ("TYPES",[]))], Process (CProcess "SimpleExample" (ProcDef (ProcStalessMain [CParAction "A1" (CircusAction (CSPCommAction (ChanComm "x1" [ChanInp "y"]) CSPSkip)),CParAction "A2" (CircusAction (CSPRepExtChoice [Choose ("x",[]) (ZSetDisplay [ZVar ("black",[]),ZVar ("yellow",[]),ZVar ("green",[])])] (CSPCommAction (ChanComm "x2" [ChanInp "x"]) CSPSkip)))] (CSPIntChoice (CActionName "A1") (CActionName "A2")))))]

##### Result

"datatype TYPE = blue | black | yellow | green\nTYPES = {blue,black,yellow,green}\nchannel x1 : TYPES\nchannel x2 : TYPES\nSimpleExample = \n\tlet \n\t\tA1 = x1?y -> SKIP\n\t\tA2 = [] x : {black,yellow,green} @ x2?x -> SKIP\n\twithin A1 |~| A2\n"


##### replacing \n
datatype TYPE = blue | black | yellow | green
TYPES = {blue,black,yellow,green}
channel x1 : TYPES
channel x2 : TYPES
SimpleExample = 
	let 
		A1 = x1?y -> SKIP
		A2 = [] x : {black,yellow,green} @ x2?x -> SKIP
	within A1 |~| A2
