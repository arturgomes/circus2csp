\chapter{Bindings functions -- File: Bindings.lhs}
This file is used in order to calculate the range of values that
the bindings will really use within a specification.
\ignore{
\begin{code}
module Bindings where
-- import Data.Text hiding (map,concat,all,take)
import Subs
import AST
import Errors

\end{code}
}
\begin{code}
\begin{code}
module TemplateFunAST where

import AST

calc_exp_ZGenFilt lvl (Include xZSExpr)
  = calc_exp_ZSExpr (lvl+1) xZSExpr
calc_exp_ZGenFilt lvl (Choose x xZExpr)
  = (calc_exp_ZExpr (lvl+1) xZExpr)
calc_exp_ZGenFilt lvl (Check xZPred)
  = (calc_exp_ZPred (lvl+1) xZPred)
calc_exp_ZGenFilt lvl (Evaluate x xZExpr1 xZExpr2)
  =  (calc_exp_ZExpr (lvl+1) xZExpr1)
    ++ (calc_exp_ZExpr (lvl+1) xZExpr2)

calc_exp_ZExpr :: Int -> ZExpr -> [(Int,ZExpr)]
calc_exp_ZExpr lvl (ZVar x)
  = [(lvl,(ZVar x))]
calc_exp_ZExpr lvl (ZInt xZInt)
  = [(lvl,(ZInt xZInt))]
calc_exp_ZExpr lvl (ZGiven x)
  = []
calc_exp_ZExpr lvl (ZFree0 x)
  = []
calc_exp_ZExpr lvl (ZFree1 x xZExpr)
  = (calc_exp_ZExpr (lvl+1) xZExpr)
calc_exp_ZExpr lvl (ZTuple xZExpr_lst)
  = (concat $ map (calc_exp_ZExpr (lvl+1)) xZExpr_lst)
calc_exp_ZExpr lvl (ZBinding xZExpr_lst)
  = (concat $ map (calc_exp_ZExpr (lvl+1)) (map snd xZExpr_lst))
calc_exp_ZExpr lvl (ZSetDisplay xZExpr_lst)
  = (concat $ map (calc_exp_ZExpr (lvl+1)) xZExpr_lst)
calc_exp_ZExpr lvl (ZSeqDisplay xZExpr_lst)
  = (concat $ map (calc_exp_ZExpr (lvl+1)) xZExpr_lst)
calc_exp_ZExpr lvl (ZFSet x)
  = []
calc_exp_ZExpr lvl (ZIntSet (Just xZInt1) (Just xZInt2))
  = [(lvl, ZInt xZInt1)]
    ++[(lvl,ZInt xZInt2)]
calc_exp_ZExpr lvl (ZIntSet (Just xZInt1) Nothing)
  = [(lvl, ZInt xZInt1)]
calc_exp_ZExpr lvl (ZIntSet Nothing (Just xZInt2))
  = [(lvl,ZInt xZInt2)]
calc_exp_ZExpr lvl (ZIntSet Nothing Nothing)
  = []
calc_exp_ZExpr lvl (ZGenerator xZReln xZExpr)
  = (calc_exp_ZExpr (lvl+1) xZExpr)
calc_exp_ZExpr lvl (ZCross xZExpr_lst)
  = (concat $ map (calc_exp_ZExpr (lvl+1)) xZExpr_lst)
calc_exp_ZExpr lvl (ZFreeType x xZBranch_lst)
  = (concat $ map (calc_exp_ZBranch (lvl+1)) xZBranch_lst)
calc_exp_ZExpr lvl (ZSetComp xZGenFilt_lst (Just xZExpr))
  =(concat $ map (calc_exp_ZGenFilt (lvl+1)) xZGenFilt_lst)
    ++ (calc_exp_ZExpr (lvl+1) xZExpr)
calc_exp_ZExpr lvl (ZSetComp xZGenFilt_lst Nothing)
  =(concat $ map (calc_exp_ZGenFilt (lvl+1)) xZGenFilt_lst)
calc_exp_ZExpr lvl (ZLambda xZGenFilt_lst xZExpr)
  = (calc_exp_ZExpr (lvl+1) xZExpr)
    ++(concat $ map (calc_exp_ZGenFilt (lvl+1)) xZGenFilt_lst)
calc_exp_ZExpr lvl (ZESchema xZSExpr)
  = calc_exp_ZSExpr (lvl+1) xZSExpr
calc_exp_ZExpr lvl (ZGivenSet g)
  = []
calc_exp_ZExpr lvl (ZUniverse)
  = []
calc_exp_ZExpr lvl (ZCall xZExpr1 xZExpr2)
  = (calc_exp_ZExpr (lvl+1) xZExpr1)
    ++(calc_exp_ZExpr (lvl+1) xZExpr2)
calc_exp_ZExpr lvl (ZReln xZReln)
  = []
calc_exp_ZExpr lvl (ZFunc1 x)
  = []
calc_exp_ZExpr lvl (ZFunc2 x)
  = []
calc_exp_ZExpr lvl (ZStrange x)
  = []
calc_exp_ZExpr lvl (ZMu xZGenFilt_lst (Just xZExpr))
  = (calc_exp_ZExpr (lvl+1) xZExpr)
    ++(concat$ map (calc_exp_ZGenFilt (lvl+1)) xZGenFilt_lst)
calc_exp_ZExpr lvl (ZMu xZGenFilt_lst Nothing)
  = (concat$ map (calc_exp_ZGenFilt (lvl+1)) xZGenFilt_lst)
calc_exp_ZExpr lvl (ZELet xZExpr_lst xZExpr)
  = (calc_exp_ZExpr (lvl+1) xZExpr)
    ++(concat $ map (calc_exp_ZExpr (lvl+1)) (map snd xZExpr_lst))
calc_exp_ZExpr lvl (ZIf_Then_Else xZPred xZExpr1 xZExpr2)
  = (calc_exp_ZPred (lvl+1) xZPred)
    ++(calc_exp_ZExpr (lvl+1) xZExpr1)
    ++(calc_exp_ZExpr (lvl+1) xZExpr2)
calc_exp_ZExpr lvl (ZSelect xZExpr x)
  = (calc_exp_ZExpr (lvl+1) xZExpr)
calc_exp_ZExpr lvl (ZTheta xZSExpr)
  = calc_exp_ZSExpr (lvl+1) xZSExpr

calc_exp_ZPred lvl (ZFalse{reason
  = xZPred_lst})
  = (concat$ map (calc_exp_ZPred (lvl+1)) xZPred_lst)
calc_exp_ZPred lvl (ZTrue{reason
  = xZPred_lst})
  = (concat$ map (calc_exp_ZPred (lvl+1)) xZPred_lst)
calc_exp_ZPred lvl (ZAnd xZPred1 xZPred2)
  = (calc_exp_ZPred (lvl+1) xZPred1)
    ++(calc_exp_ZPred (lvl+1) xZPred2)
calc_exp_ZPred lvl (ZOr xZPred1 xZPred2)
  = (calc_exp_ZPred (lvl+1) xZPred1)
    ++(calc_exp_ZPred (lvl+1) xZPred2)
calc_exp_ZPred lvl (ZImplies xZPred1 xZPred2)
  = (calc_exp_ZPred (lvl+1) xZPred1)
    ++(calc_exp_ZPred (lvl+1) xZPred2)
calc_exp_ZPred lvl (ZIff xZPred1 xZPred2)
  = (calc_exp_ZPred (lvl+1) xZPred1)
    ++(calc_exp_ZPred (lvl+1) xZPred2)
calc_exp_ZPred lvl (ZNot xZPred)
  = (calc_exp_ZPred (lvl+1) xZPred)
calc_exp_ZPred lvl (ZExists xZGenFilt_lst xZPred)
  = (calc_exp_ZPred (lvl+1) xZPred)
    ++(concat$ map (calc_exp_ZGenFilt (lvl+1)) xZGenFilt_lst)
calc_exp_ZPred lvl (ZExists_1 xZGenFilt_lst xZPred)
  = (calc_exp_ZPred (lvl+1) xZPred)
    ++(concat$ map (calc_exp_ZGenFilt (lvl+1)) xZGenFilt_lst)
calc_exp_ZPred lvl (ZForall xZGenFilt_lst xZPred)
  = (calc_exp_ZPred (lvl+1) xZPred)
    ++(concat$ map (calc_exp_ZGenFilt (lvl+1)) xZGenFilt_lst)
calc_exp_ZPred lvl (ZPLet xZExpr_lst xZPred)
  = (calc_exp_ZPred (lvl+1) xZPred)
    ++(concat$  map (calc_exp_ZExpr (lvl+1)) (map snd xZExpr_lst))
calc_exp_ZPred lvl (ZEqual xZExpr1 xZExpr2)
  = (calc_exp_ZExpr (lvl+1) xZExpr1)
    ++(calc_exp_ZExpr (lvl+1) xZExpr2)
calc_exp_ZPred lvl (ZMember xZExpr1 xZExpr2)
  = (calc_exp_ZExpr (lvl+1) xZExpr1)
    ++(calc_exp_ZExpr (lvl+1) xZExpr2)
calc_exp_ZPred lvl (ZPre xZSExpr)
  = calc_exp_ZSExpr (lvl+1) xZSExpr
calc_exp_ZPred lvl (ZPSchema xZSExpr)
  = (calc_exp_ZSExpr (lvl+1) xZSExpr)

calc_exp_ZSExpr lvl (ZSchema xZGenFilt_lst)
  = (concat $ map (calc_exp_ZGenFilt (lvl+1)) xZGenFilt_lst)
calc_exp_ZSExpr lvl (ZSRef s x xZReplace_lst)
  = (concat$ map (calc_exp_ZReplace (lvl+1)) xZReplace_lst)
calc_exp_ZSExpr lvl (ZS1 sa xZSExpr)
  = calc_exp_ZSExpr (lvl+1) xZSExpr
calc_exp_ZSExpr lvl (ZS2 x xZSExpr1 xZSExpr2)
  = (calc_exp_ZSExpr (lvl+1) xZSExpr1)
    ++(calc_exp_ZSExpr (lvl+1) xZSExpr2)
calc_exp_ZSExpr lvl (ZSHide xZSExpr xZVar_lst)
  = ( calc_exp_ZSExpr (lvl+1) xZSExpr)
calc_exp_ZSExpr lvl (ZSExists xZGenFilt_lst xZSExpr)
  = (concat $ map (calc_exp_ZGenFilt (lvl+1)) xZGenFilt_lst)
    ++(calc_exp_ZSExpr (lvl+1) xZSExpr)
calc_exp_ZSExpr lvl (ZSExists_1 xZGenFilt_lst xZSExpr)
  = (concat $ map (calc_exp_ZGenFilt (lvl+1)) xZGenFilt_lst)
    ++(calc_exp_ZSExpr (lvl+1) xZSExpr)
calc_exp_ZSExpr lvl (ZSForall xZGenFilt_lst xZSExpr)
  = (concat $ map (calc_exp_ZGenFilt (lvl+1)) xZGenFilt_lst)
    ++(calc_exp_ZSExpr (lvl+1) xZSExpr)

calc_exp_ZReplace lvl (ZRename xZVar1 xZVar2)
  = []
calc_exp_ZReplace lvl (ZAssign v xZExpr)
  = (calc_exp_ZExpr (lvl+1) xZExpr)


calc_exp_ZBranch lvl (ZBranch0 v)
  = []
calc_exp_ZBranch lvl (ZBranch1 v xZExpr)
  = (calc_exp_ZExpr (lvl+1) xZExpr)

calc_exp_ZPara lvl (ZGivenSetDecl x)
  = []
calc_exp_ZPara lvl (ZSchemaDef x xZSExpr)
  = (calc_exp_ZSExpr (lvl+1) xZSExpr)
calc_exp_ZPara lvl (Process xProcDecl)
  = calc_exp_ProcDecl (lvl+1) xProcDecl

calc_exp_CDecl lvl (CChan xname)
  = []
calc_exp_CDecl lvl (CChanDecl xname xZExpr)
  = (calc_exp_ZExpr (lvl+1) xZExpr)
calc_exp_CDecl lvl (CGenChanDecl xname xname1 xZExpr)
  = (calc_exp_ZExpr (lvl+1) xZExpr)


calc_exp_ProcDecl lvl (CProcess xname xProcessDef)
  = (calc_exp_ProcessDef (lvl+1) xProcessDef)
calc_exp_ProcDecl lvl (CParamProcess xname xZName_lst xProcessDef)
  = (calc_exp_ProcessDef (lvl+1) xProcessDef)
calc_exp_ProcDecl lvl (CGenProcess xname xZName_lst xProcessDef)
  = (calc_exp_ProcessDef (lvl+1) xProcessDef)

calc_exp_ProcessDef lvl (ProcDefSpot xZGenFilt_lst xProcessDef)
  = (calc_exp_ProcessDef (lvl+1) xProcessDef)
    ++(concat $ map (calc_exp_ZGenFilt (lvl+1)) xZGenFilt_lst)
calc_exp_ProcessDef lvl (ProcDefIndex xZGenFilt_lst xProcessDef)
  = (concat $ map (calc_exp_ZGenFilt (lvl+1)) xZGenFilt_lst)
    ++(calc_exp_ProcessDef (lvl+1) xProcessDef)
calc_exp_ProcessDef lvl (ProcDef c)
  = (calc_exp_CProc (lvl+1) c)

calc_exp_CProc lvl (CRepSeqProc xZGenFilt_lst xCProc)
  = (calc_exp_CProc (lvl+1) xCProc)
    ++(concat $ map (calc_exp_ZGenFilt (lvl+1)) xZGenFilt_lst)
calc_exp_CProc lvl (CRepExtChProc xZGenFilt_lst xCProc)
  = (calc_exp_CProc (lvl+1) xCProc)
    ++(concat $ map (calc_exp_ZGenFilt (lvl+1)) xZGenFilt_lst)
calc_exp_CProc lvl (CRepIntChProc xZGenFilt_lst xCProc)
  = (calc_exp_CProc (lvl+1) xCProc)
    ++(concat $ map (calc_exp_ZGenFilt (lvl+1)) xZGenFilt_lst)
calc_exp_CProc lvl (CRepParalProc xCSExp xZGenFilt_lst xCProc)
  = (calc_exp_CProc (lvl+1) xCProc)
    ++(concat $ map (calc_exp_ZGenFilt (lvl+1)) xZGenFilt_lst)
calc_exp_CProc lvl (CRepInterlProc xZGenFilt_lst xCProc)
  = (calc_exp_CProc (lvl+1) xCProc)
    ++(concat $ map (calc_exp_ZGenFilt (lvl+1)) xZGenFilt_lst)
calc_exp_CProc lvl (CHide xCProc xCSExp)
  = (calc_exp_CProc (lvl+1) xCProc)
calc_exp_CProc lvl (CExtChoice xCProc1 xCProc2)
  = (calc_exp_CProc (lvl+1) xCProc1)
    ++(calc_exp_CProc (lvl+1) xCProc2)
calc_exp_CProc lvl (CIntChoice xCProc1 xCProc2)
  = (calc_exp_CProc (lvl+1) xCProc1)
    ++(calc_exp_CProc (lvl+1) xCProc2)
calc_exp_CProc lvl (CParParal xCSExp xCProc1 xCProc2)
  = (calc_exp_CProc (lvl+1) xCProc1)
    ++(calc_exp_CProc (lvl+1) xCProc2)
calc_exp_CProc lvl (CInterleave xCProc1 xCProc2)
  = (calc_exp_CProc (lvl+1) xCProc1)
    ++(calc_exp_CProc (lvl+1) xCProc2)
calc_exp_CProc lvl (CGenProc xname xZExpr_lst)
  = (concat$  map (calc_exp_ZExpr (lvl+1)) xZExpr_lst)
calc_exp_CProc lvl (CParamProc xname xZExpr_lst)
  = (concat$  map (calc_exp_ZExpr (lvl+1)) xZExpr_lst)
calc_exp_CProc lvl (CProcRename xname xComm_lst1 xComm_lst2)
  = (concat$ map (calc_exp_Comm lvl) xComm_lst1)
    ++(concat $ map (calc_exp_Comm lvl) xComm_lst2)
calc_exp_CProc lvl (CSeq xCProc1 xCProc2)
  = (calc_exp_CProc (lvl+1) xCProc1)
    ++(calc_exp_CProc (lvl+1) xCProc2)
calc_exp_CProc lvl (CSimpIndexProc xname xZExpr_lst)
  = (concat$ map (calc_exp_ZExpr (lvl+1)) xZExpr_lst)
calc_exp_CProc lvl (CircusProc xname)
  = []
calc_exp_CProc lvl (ProcMain xZPara xPPar_lst xCAction)
  = (calc_exp_ZPara (lvl+1) xZPara)
    ++(calc_exp_CAction (lvl+1) xCAction)
    ++(concat $ map (calc_exp_PPar (lvl+1)) xPPar_lst)
calc_exp_CProc lvl (ProcStalessMain xPPar_lst xCAction)
  = (calc_exp_CAction (lvl+1) xCAction)
    ++(concat $ map (calc_exp_PPar (lvl+1)) xPPar_lst)

-- calc_exp_PPar lvl (ProcZPara xZPara) = (calc_exp_ZPara (lvl+1) xZPara)
calc_exp_PPar lvl (CParAction xname xParAction)
  = (calc_exp_ParAction (lvl+1) xParAction)
-- calc_exp_PPar lvl (CNameSet xname xZExpr_lst) = (concat $ map (calc_exp_ZExpr (lvl+1)) xZExpr_lst)

calc_exp_ParAction lvl (CircusAction xCAction)
  = (calc_exp_CAction (lvl+1) xCAction)
calc_exp_ParAction lvl (ParamActionDecl xZGenFilt_lst xParAction)
  = (concat $ map (calc_exp_ZGenFilt lvl) xZGenFilt_lst)
    ++(calc_exp_ParAction (lvl+1) xParAction)

-- calc_exp_CAction lvl (CActionSchemaExpr xZSExpr) = (calc_exp_ZSExpr (lvl+1) xZSExpr)
calc_exp_CAction lvl (CActionCommand xCCommand)
  = calc_exp_CCommand (lvl+1) xCCommand
calc_exp_CAction lvl (CActionName xname)
  = []
calc_exp_CAction lvl (CSPSkip )
  = []
calc_exp_CAction lvl (CSPStop )
  = []
calc_exp_CAction lvl (CSPChaos)
  = []
calc_exp_CAction lvl (CSPCommAction xComm xCAction)
  = (calc_exp_Comm (lvl+1) xComm)
    ++(calc_exp_CAction (lvl+1) xCAction)
calc_exp_CAction lvl (CSPGuard xZPred xCAction)
  = (calc_exp_CAction (lvl+1) xCAction)
    ++(calc_exp_ZPred (lvl+1) xZPred)
calc_exp_CAction lvl (CSPSeq xCAction1 xCAction2)
  = (calc_exp_CAction (lvl+1) xCAction1)
    ++(calc_exp_CAction (lvl+1) xCAction2)
calc_exp_CAction lvl (CSPExtChoice xCAction1 xCAction2)
  = (calc_exp_CAction (lvl+1) xCAction1)
    ++(calc_exp_CAction (lvl+1) xCAction2)
calc_exp_CAction lvl (CSPIntChoice xCAction1 xCAction2)
  = (calc_exp_CAction (lvl+1) xCAction1)
    ++(calc_exp_CAction (lvl+1) xCAction2)
calc_exp_CAction lvl (CSPNSParal x1 xCSExp x2 xCAction1 xCAction2)
  = (calc_exp_CAction (lvl+1) xCAction1)
    ++(calc_exp_CAction (lvl+1) xCAction2)
calc_exp_CAction lvl (CSPParal xCSExp xCAction1 xCAction2)
  = (calc_exp_CAction (lvl+1) xCAction1)
    ++(calc_exp_CAction (lvl+1) xCAction2)
calc_exp_CAction lvl (CSPNSInter xZExpr_lst xZExpr_lst2 xCAction1 xCAction2)
  = (calc_exp_CAction (lvl+1) xCAction1)
    ++(calc_exp_CAction (lvl+1) xCAction2)
calc_exp_CAction lvl (CSPInterleave xCAction1 xCAction2)
  = (calc_exp_CAction (lvl+1) xCAction1)
    ++(calc_exp_CAction (lvl+1) xCAction2)
calc_exp_CAction lvl (CSPHide xCAction xCSExp)
  = (calc_exp_CAction (lvl+1) xCAction)
calc_exp_CAction lvl (CSPParAction xname xZExpr_lst)
  = (concat $ map (calc_exp_ZExpr (lvl+1)) xZExpr_lst)
calc_exp_CAction lvl (CSPRenAction xname xCReplace)
  = calc_exp_CReplace (lvl+1) xCReplace
calc_exp_CAction lvl (CSPRecursion xname xCAction)
  = (calc_exp_CAction (lvl+1) xCAction)
calc_exp_CAction lvl (CSPUnfAction xname xCAction)
  = (calc_exp_CAction (lvl+1) xCAction)
calc_exp_CAction lvl (CSPUnParAction xZGenFilt_lst xCAction xname)
  = (calc_exp_CAction (lvl+1) xCAction)
    ++(concat $ map (calc_exp_ZGenFilt (lvl+1)) xZGenFilt_lst)
calc_exp_CAction lvl (CSPRepSeq xZGenFilt_lst xCAction)
  = (calc_exp_CAction (lvl+1) xCAction)
    ++(concat $ map (calc_exp_ZGenFilt lvl) xZGenFilt_lst)
calc_exp_CAction lvl (CSPRepExtChoice xZGenFilt_lst xCAction)
  = (calc_exp_CAction (lvl+1) xCAction)
    ++(concat $ map (calc_exp_ZGenFilt lvl) xZGenFilt_lst)
calc_exp_CAction lvl (CSPRepIntChoice xZGenFilt_lst xCAction)
  = (calc_exp_CAction (lvl+1) xCAction)
    ++(concat $ map (calc_exp_ZGenFilt lvl) xZGenFilt_lst)
calc_exp_CAction lvl (CSPRepParalNS xCSExp xZGenFilt_lst xZExpr_lst xCAction)
  = (calc_exp_CAction (lvl+1) xCAction)
    ++(concat $ map (calc_exp_ZGenFilt lvl) xZGenFilt_lst)
    ++(concat $ map (calc_exp_ZExpr (lvl+1)) xZExpr_lst)
calc_exp_CAction lvl (CSPRepParal xCSExp xZGenFilt_lst xCAction)
  = (calc_exp_CAction (lvl+1) xCAction)
    ++(concat $ map (calc_exp_ZGenFilt lvl) xZGenFilt_lst)
calc_exp_CAction lvl (CSPRepInterlNS xZGenFilt_lst xZExpr_lst xCAction)
  = (calc_exp_CAction (lvl+1) xCAction)
    ++(concat $ map (calc_exp_ZGenFilt lvl) xZGenFilt_lst)
    ++(concat $ map (calc_exp_ZExpr (lvl+1)) xZExpr_lst)
calc_exp_CAction lvl (CSPRepInterl xZGenFilt_lst xCAction)
  = (calc_exp_CAction (lvl+1) xCAction)
    ++(concat $ map (calc_exp_ZGenFilt lvl) xZGenFilt_lst)

calc_exp_Comm lvl (ChanComm xname xCParameter_lst)
  = (concat $ map (calc_exp_CParameter lvl) xCParameter_lst)
calc_exp_Comm lvl (ChanGenComm xname xZExpr_lst xCParameter_lst)
  = (concat $ map (calc_exp_CParameter lvl) xCParameter_lst)
    ++(concat $ map (calc_exp_ZExpr (lvl+1)) xZExpr_lst)

calc_exp_CParameter lvl (ChanInp xname)
  = []
calc_exp_CParameter lvl (ChanInpPred xname xZPred)
  = (calc_exp_ZPred (lvl+1) xZPred)
calc_exp_CParameter lvl (ChanOutExp xZExpr)
  = (calc_exp_ZExpr (lvl+1) xZExpr)
calc_exp_CParameter lvl (ChanDotExp xZExpr)
  = (calc_exp_ZExpr (lvl+1) xZExpr)

calc_exp_CCommand lvl (CAssign xZVar_lst xZExpr_lst)
  = (concat $ map (calc_exp_ZExpr (lvl+1)) xZExpr_lst)
calc_exp_CCommand lvl (CIf xCGActions)
  = (calc_exp_CGActions (lvl+1) xCGActions)
calc_exp_CCommand lvl (CVarDecl xZGenFilt_lst xCAction)
  = (calc_exp_CAction (lvl+1) xCAction)
    ++(concat $ map (calc_exp_ZGenFilt lvl) xZGenFilt_lst)
calc_exp_CCommand lvl (CValDecl xZGenFilt_lst xCAction)
  = (calc_exp_CAction (lvl+1) xCAction)
    ++(concat $ map (calc_exp_ZGenFilt lvl) xZGenFilt_lst)
calc_exp_CCommand lvl (CResDecl xZGenFilt_lst xCAction)
  = (calc_exp_CAction (lvl+1) xCAction)
    ++(concat $ map (calc_exp_ZGenFilt lvl) xZGenFilt_lst)
calc_exp_CCommand lvl (CVResDecl xZGenFilt_lst xCAction)
  = (calc_exp_CAction (lvl+1) xCAction)
    ++(concat$ map (calc_exp_ZGenFilt lvl) xZGenFilt_lst)
calc_exp_CCommand lvl (CAssumpt xZName_lst xZPred1 xZPred2)
  = (calc_exp_ZPred (lvl+1) xZPred1)
    ++(calc_exp_ZPred (lvl+1) xZPred2)
calc_exp_CCommand lvl (CAssumpt1 xZName_lst xZPred)
  = (calc_exp_ZPred (lvl+1) xZPred)
calc_exp_CCommand lvl (CPrefix xZPred1 xZPred2)
  = (calc_exp_ZPred (lvl+1) xZPred1)
    ++(calc_exp_ZPred (lvl+1) xZPred2)
calc_exp_CCommand lvl (CPrefix1 xZPred)
  = (calc_exp_ZPred (lvl+1) xZPred)
calc_exp_CCommand lvl (CommandBrace xZPred)
  = (calc_exp_ZPred (lvl+1) xZPred)
calc_exp_CCommand lvl (CommandBracket xZPred)
  = (calc_exp_ZPred (lvl+1) xZPred)

calc_exp_CGActions lvl (CircGAction xZPred xCAction)
  = (calc_exp_CAction (lvl+1) xCAction)
    ++(calc_exp_ZPred (lvl+1) xZPred)
calc_exp_CGActions lvl (CircThenElse xCGActions1 xCGActions2)
  = (calc_exp_CGActions (lvl+1) xCGActions1)
    ++(calc_exp_CGActions (lvl+1) xCGActions2)

calc_exp_CReplace lvl (CRename xZVar_lst xZVar_lst1)
  = []
calc_exp_CReplace lvl (CRenameAssign xZVar_lst xZVar_lst1)
  = []


\end{code}
